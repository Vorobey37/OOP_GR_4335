package Interfaces;

import Classes.Actor;
/**
 * Чертеж методов для использования, касающиеся клиента.
 */
public interface iActorBehaviour {
    /**
     * Данный метод представляет из себя чертеж, который нужно будет 
     * переопределить (написать логику) в классе, его имплементирующем.
     * Принимает аргумент true или false.
     * @param makeOrder со сначением true или false. 
     */
    void setTakeOrder(boolean makeOrder);

    /**
     * Данный метод представляет из себя чертеж, который нужно будет 
     * переопределить (написать логику) в классе, его имплементирующем.
     * Должен принимать аргумент true или false.
     * @param pikUpOrder со сначением true или false. 
     */
    void setMakeOrder(boolean pikUpOrder);

    /**
     * Данный метод представляет из себя чертеж, который нужно будет
     * переопределить (написать логику) в классе, его имплементирующем.
     * Должен возвращать значение true или false.
     * @return true или false.
     */
    boolean isTakeOrder();

    /**
     * Данный метод представляет из себя чертеж, который нужно будет
     * переопределить (написать логику) в классе, его имплементирующем.
     * Должен возвращать значение true или false.
     * @return true или false.
     */
    boolean isMakeOrder();

    /**
     * Данный метод представляет из себя чертеж, который нужно будет
     * переопределить (написать логику) в классе, его имплементирующем.
     * Должен возвращать объект.
     * @return объект
     */
    Actor getActor();

    /**
     * Данный метод представляет из себя чертеж, который нужно будет
     * переопределить (написать логику) в классе, его имплементирующем.
     * @return true или false
     */
    boolean getIsDefectProduct();
}
